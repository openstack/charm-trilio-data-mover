# This file is managed by Juju - changes will be overwritten
[DEFAULT]
# Ensure the qemu-img binary in the virtenv is not used
use_virt_qemu = False

{% if amqp.transport_url -%}
# AMQP
{% if options.trilio_properties.transport_type == "legacy" %}
transport_url = {{ amqp.transport_url }}
{% else %}
dmapi_transport_url = {{ amqp.transport_url }}
{% endif %}
rabbit_virtual_host = {{ amqp.vhost }}
{% endif -%}

{% if options.translated_backup_target_type == 'nfs' -%}
# NFS
vault_storage_nfs_export = {{ options.nfs_shares }}
vault_storage_nfs_options = {{ options.nfs_options }}
{% endif -%}

{% if options.translated_backup_target_type == 's3' -%}
# S3
vault_storage_nfs_export = TrilioVault
vault_s3_auth_version = DEFAULT
vault_s3_access_key_id = {{ options.tv_s3_access_key }}
vault_s3_secret_access_key = {{ options.tv_s3_secret_key }}
vault_s3_region_name =  {{ options.tv_s3_region_name }}
vault_s3_bucket =  {{ options.tv_s3_bucket }}
vault_s3_endpoint_url =  {{ options.tv_s3_endpoint_url }}
{% if options.trilio_s3_cert_config.cert_file -%}
vault_s3_ssl_cert = {{ options.trilio_s3_cert_config.cert_file }}
{%- endif -%}
{% endif -%}

# MISC
vault_storage_type = {{ options.translated_backup_target_type }}
vault_data_directory_old = {{ options.tv_data_dir_old }}
vault_data_directory = {{ options.tv_data_dir }}

# Logging
log_file = /var/log/nova/tvault-contego.log
debug = {{ options.debug }}
verbose = {{ options.verbose }}

# Upload Configuration
max_uploads_pending = {{ options.tv_datamover_max_uploads_pending }}
max_commit_pending = {{ options.tv_datamover_max_commit_pending }}
qemu_agent_ping_timeout = {{ options.tv_datamover_qemu_agent_ping_timeout }}

{% if options.trilio_properties.db_type == "dedicated" %}
[dmapi_database]
connection = {{ shared_db.dmapi_uri }}
{% endif %}

# privsep
[contego_sys_admin]
helper_command = sudo /usr/bin/nova-rootwrap /etc/nova/rootwrap.conf privsep-helper

[conductor]
use_local = True

[ceph]
ceph_dir = {{ options.ceph_dir }}

[libvirt]
rbd_user = {{ options.rbd_user }}
images_rbd_ceph_conf = {{ options.ceph_dir }}/ceph.conf
